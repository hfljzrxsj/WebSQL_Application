DROP TABLE IF EXISTS Grade;
CREATE TABLE IF NOT EXISTS Grade (                      -- 成绩表，多对多关系
    student_id INTEGER,                                 -- 学号
    course_id  INTEGER,                                 -- 课程编号
    score      INTEGER check (score between 0 and 100), -- 成绩
    PRIMARY KEY (student_id,course_id),
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (course_id) REFERENCES Course(course_id)
);
DROP INDEX IF EXISTS Grade_Index;
CREATE UNIQUE INDEX IF NOT EXISTS Grade_Index ON Grade(student_id,course_id);
insert into Grade(student_id,course_id,score)
values (1,1,90),
       (1,2,80),
       (1,3,70),
       (1,4,60),
       (1,5,50),
       (1,6,40),
       (1,7,30),
       (1,8,20),
       (1,9,10),
       (1,10,100),
       (1,11,90),
       (1,12,80),
       (1,13,70),
       (1,14,60),
       (1,15,50),
       (1,16,40),
       (1,17,30),
       (1,18,20),
       (1,19,10),
       (1,20,100),
       (1,21,90),
       (1,22,80),
       (1,23,70),
       (1,24,60),
       (1,25,50),
       (1,26,40),
       (1,27,30),
       (1,28,20),
       (1,29,10),
       (1,30,100),
       (2,1,90),
       (2,2,80),
       (2,3,70),
       (2,4,60),
       (2,5,50),
       (2,6,40),
       (2,7,30),
       (2,8,20),
       (2,9,10),
       (2,10,100),
       (2,11,90),
       (2,12,80),
       (2,13,70),
       (2,14,60),
       (2,15,50),
       (2,16,40),
       (2,17,30),
       (2,18,20),
       (2,19,10),
       (2,20,100),
       (2,21,90),
       (2,22,80),
       (2,23,70),
       (2,24,60),
       (2,25,50),
       (2,26,40),
       (2,27,30),
       (2,28,20),
       (2,29,10),
       (2,30,100);